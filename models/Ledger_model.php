<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Ledger_model extends CI_Model{    public function addLedger($title, $subgroup){      $title= trim(strtoupper($title));      $subgroup= trim(ucfirst($subgroup));      $query = $this->db->select('ledger_id')->from('ledgers')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->where('delete_status', 0)->like('ledger_title', $title, 'none')->get();        if ($query->num_rows() > 0) {            return $query->row()->ledger_id;        }else{            $subgroup_id                 = $this->db->select('account_subgroup_id')->from('account_subgroup')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->where('delete_status', 0)->like('subgroup_title', $subgroup, 'none')->get()->row()->account_subgroup_id;            $data                        = array();            $data['ledger_title']        = $title;            $data['account_subgroup_id'] = $subgroup_id;            $data['branch_id']           = $this->session->userdata('SESS_BRANCH_ID');            $data['added_user_id']           = $this->session->userdata('SESS_USER_ID');            $data['added_date']           = date('Y-m-d');            $this->db->insert('ledgers', $data);            $id                          = $this->db->insert_id();            $this->db->insert('log', array(                    'user_id'           => $this->session->userdata('SESS_USER_ID'),                    'table_id'          => $id,                    'table_name'        => 'ledgers',                    'financial_year_id' => $this->session->userdata('SESS_FINANCIAL_YEAR_ID'),                    'branch_id'         => $this->session->userdata('SESS_BRANCH_ID'),                    'message'           => 'Ledger created' ));            return $id;        }    }    public function getDefaultLedgerArray($default_id){        $ledger_ary = array();        $default_id = $ledger_ary;        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $def_qry = $this->db->query("SELECT * FROM branch_default_ledgers WHERE ledger_id='{$default_id}' AND branch_id='{$branch_id}'");        if($def_qry->num_rows() > 0){            $def_resp = $def_qry->row();            $ledger_ary = array(                              'ledger_name' => $def_resp->ledger_name,                              'subgrp_2' => $def_resp->sub_group_1,                              'subgrp_1' => $def_resp->sub_group_2,                              'main_grp' => $def_resp->main_group,            );         }        return $ledger_ary;    }    public function getDefaultLedgerId($id){      $branch_default_ledgers = $this->db->query("SELECT * FROM branch_default_ledgers WHERE default_ledger_id='{$id}' AND branch_id ='".$this->session->userdata('SESS_BRANCH_ID')."' ");      $branch_default = array();      if($branch_default_ledgers->num_rows() > 0){        $branch_default = $branch_default_ledgers->row();      }      return $branch_default;    }    public function getGroupLedgerId($ledger_ary){      $ledger_name = preg_replace('!\s+!', ' ', trim($ledger_ary['ledger_name']));      $subgroup_2= preg_replace('!\s+!', ' ', trim(array_key_exists('second_grp', $ledger_ary) ? $ledger_ary['second_grp'] : $ledger_ary['subgrp_1']));      $subgroup_1= preg_replace('!\s+!', ' ', trim(array_key_exists('primary_grp', $ledger_ary) ? $ledger_ary['primary_grp'] : $ledger_ary['subgrp_2']));      $main_grp= preg_replace('!\s+!', ' ', trim($ledger_ary['main_grp']));      $branch_id = $this->session->userdata('SESS_BRANCH_ID');      $default_value = '';      if(@$ledger_ary['default_value']) $default_value = $ledger_ary['default_value'];      $default_ledger_id = (@$ledger_ary['default_ledger_id'] ? $ledger_ary['default_ledger_id'] : 0);            $qry = $this->db->query("SELECT l.ledger_id FROM `tbl_ledgers` l JOIN tbl_sub_group s ON l.sub_group_id=s.sub_grp_id JOIN tbl_main_group m ON s.main_grp_id=m.main_grp_id WHERE LOWER(l.ledger_name) ='".strtolower($ledger_name)."' AND l.branch_id='{$branch_id}' AND l.default_ledger_id='{$default_ledger_id}' AND LOWER(s.sub_group_name_1)='".strtolower($subgroup_1)."' AND LOWER(s.sub_group_name_2)='".strtolower($subgroup_2)."' AND LOWER(m.grp_name) = '".strtolower($main_grp)."'");// AND l.default_value='{$default_value}'      if ($qry->num_rows() > 0){        return $qry->row()->ledger_id;      } else {        $qry = $this->db->query("SELECT l.ledger_id FROM `tbl_ledgers` l JOIN tbl_sub_group s ON l.sub_group_id=s.sub_grp_id JOIN tbl_main_group m ON s.main_grp_id=m.main_grp_id WHERE LOWER(l.ledger_name) ='".strtolower($ledger_name)."' AND l.branch_id='{$branch_id}' AND LOWER(s.sub_group_name_1)='".strtolower($subgroup_1)."' AND LOWER(s.sub_group_name_2)='".strtolower($subgroup_2)."' AND LOWER(m.grp_name) = '".strtolower($main_grp)."'");        if($qry->num_rows() > 0){          $ledger_id = $qry->row()->ledger_id;          $this->db->set('default_ledger_id',$default_ledger_id);          $this->db->where('ledger_id',$ledger_id);          $this->db->update('tbl_ledgers');          return $ledger_id;        }else{          /* If Ledger not exist than need to add new              Check main group exist or not             Main group Id 5 = Suspense          */          $main_grp_id  = $this->db->select('main_grp_id')->from('tbl_main_group')->like('LOWER(grp_name)', strtolower($main_grp), 'none')->get()->row();                    if(!$main_grp_id){            $main_grp_id = 5;          }else{            $main_grp_id = $main_grp_id->main_grp_id;          }          /* Check sub group and take a Id from default table */          $sub_grp_id = $this->db->select('sub_grp_id')->from('tbl_sub_group s')->join('tbl_ledgers l','s.sub_grp_id=l.sub_group_id','left')->where('main_grp_id',$main_grp_id)->where('(LOWER(sub_group_name_1) = "'.strtolower($subgroup_1).'" AND LOWER(sub_group_name_2)="'.strtolower($subgroup_2).'") ')->where('l.sub_group_id IS NULL')->get()->row();          if(!$sub_grp_id){            $add_sub = $this->db->insert('tbl_sub_group',array('main_grp_id' => $main_grp_id,'sub_group_name_1'=>$subgroup_1,'sub_group_name_2'=>$subgroup_2,'group_status'=>'1','is_editable'=>'1','branch_id'=> $this->session->userdata('SESS_BRANCH_ID')));            $sub_grp_id = $this->db->insert_id();          }else{            $sub_grp_id = $sub_grp_id->sub_grp_id;          }          /* After taking all the main group Id and Sub group Id add ledger ID */          $data                        = array();          $data['ledger_name']         = $ledger_name;          $data['default_value']       = $default_value;          $data['default_ledger_id']   = $default_ledger_id;          $data['sub_group_id']        = $sub_grp_id;          $data['branch_id']           = $this->session->userdata('SESS_BRANCH_ID');          $data['created_by']          = $this->session->userdata('SESS_USER_ID');          $data['created_ts']          = date('Y-m-d');          $is_blank = $this->db->query("SELECT ledger_id FROM `tbl_ledgers` WHERE sub_group_id='{$sub_grp_id}' AND branch_id='".$this->session->userdata('SESS_BRANCH_ID')."' AND ledger_name = '' ");          if ($is_blank->num_rows() > 0){            $id = $is_blank->row()->ledger_id;            $this->db->set($data);            $this->db->where('ledger_id',$id);            $this->db->update('tbl_ledgers');          }else{            $this->db->insert('tbl_ledgers', $data);            $id = $this->db->insert_id();          }          $this->db->insert('log', array(                  'user_id'           => $this->session->userdata('SESS_USER_ID'),                  'table_id'          => $id,                  'table_name'        => 'ledgers',                  'financial_year_id' => $this->session->userdata('SESS_FINANCIAL_YEAR_ID'),                  'branch_id'         => $this->session->userdata('SESS_BRANCH_ID'),                  'message'           => 'Ledger created' ));          return $id;        }      }    }    public function addGroupLedger($ledger_ary){      $ledger_name = preg_replace('!\s+!', ' ', trim($ledger_ary['ledger_name']));      $subgroup_2= preg_replace('!\s+!', ' ', trim(array_key_exists('second_grp', $ledger_ary) ? $ledger_ary['second_grp'] : $ledger_ary['subgrp_1']));      $subgroup_1= preg_replace('!\s+!', ' ', trim(array_key_exists('primary_grp', $ledger_ary) ? $ledger_ary['primary_grp'] : $ledger_ary['subgrp_2']));      $main_grp= preg_replace('!\s+!', ' ', trim($ledger_ary['main_grp']));      $query = $this->db->select('ledger_id')->from('tbl_ledgers')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->where('LOWER(ledger_name)', strtolower($ledger_name), 'none')->get();            if ($query->num_rows() > 0){        return $query->row()->ledger_id;      } else {          $main_grp_id  = $this->db->select('main_grp_id')->from('tbl_main_group')->like('LOWER(grp_name)', strtolower($main_grp), 'none')->get()->row();                    if(!$main_grp_id){            /*$add_main = $this->db->insert('tbl_main_group',array('grp_name' => 'Customer','report_id'=>1));*/            $main_grp_id = 5;          }else{            $main_grp_id = $main_grp_id->main_grp_id;          }          $sub_grp_id = $this->db->select('sub_grp_id')->from('tbl_sub_group s')->join('tbl_ledgers l','s.sub_grp_id=l.sub_group_id','left')->where('main_grp_id',$main_grp_id)->where('(LOWER(sub_group_name_1) = "'.strtolower($subgroup_1).'" AND LOWER(sub_group_name_2)="'.strtolower($subgroup_2).'") ')->where('l.sub_group_id IS NULL')->get()->row();          if(!$sub_grp_id){            $add_sub = $this->db->insert('tbl_sub_group',array('main_grp_id' => $main_grp_id,'sub_group_name_1'=>$subgroup_1,'sub_group_name_2'=>$subgroup_2,'group_status'=>'1','is_editable'=>'1','branch_id'=> $this->session->userdata('SESS_BRANCH_ID')));            $sub_grp_id = $this->db->insert_id();          }else{            $sub_grp_id = $sub_grp_id->sub_grp_id;          }          /*echo $this->db->last_query();          print_r($sub_grp_id);          exit();*/          $data                        = array();          $data['ledger_name']         = $ledger_name;          $data['sub_group_id']        = $sub_grp_id;          $data['branch_id']           = $this->session->userdata('SESS_BRANCH_ID');          $data['created_by']          = $this->session->userdata('SESS_USER_ID');          $data['created_ts']          = date('Y-m-d');          $this->db->insert('tbl_ledgers', $data);          $id                          = $this->db->insert_id();          $this->db->insert('log', array(                  'user_id'           => $this->session->userdata('SESS_USER_ID'),                  'table_id'          => $id,                  'table_name'        => 'ledgers',                  'financial_year_id' => $this->session->userdata('SESS_FINANCIAL_YEAR_ID'),                  'branch_id'         => $this->session->userdata('SESS_BRANCH_ID'),                  'message'           => 'Ledger created' ));          return $id;      }    }    public function GetVoucherLedgers(){      $this->db->select('ledger_id,ledger_name');      $this->db->from('tbl_ledgers');      $this->db->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'));      $this->db->where('ledger_name !=', '');      $query = $this->db->get();             return $query->result_array();    }    public function GetLedgersName(){      $this->db->select('ledger_name,ledger_id');      $this->db->where('ledger_name !=','');      $this->db->where('branch_id',$this->session->userdata('SESS_BRANCH_ID'));      $resp = $this->db->get('tbl_ledgers');      $resp = $resp->result_array();      return $resp;    }    public function GetLedgersNameBank(){      $this->db->select('ledger_name,tbl_ledgers.ledger_id');      $this->db->from('tbl_ledgers');      $this->db->join('bank_account','bank_account.ledger_id = tbl_ledgers.ledger_id');      $this->db->where('ledger_name !=','');      $this->db->where('tbl_ledgers.branch_id',$this->session->userdata('SESS_BRANCH_ID'));      $resp = $this->db->get('');      $resp = $resp->result_array();      return $resp;    }    public function getDefaultLedger($label)    {        /*$result = $this->db->select('ledger_id')->from('default_ledgers')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->like('ledger_label', $label, 'none')->get()->row();*/        $result = $this->db->select('ledger_id')->from('tbl_ledgers')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->where('ledger_name', $label, 'none')->get()->row();        if(!empty($result)){          return $result->ledger_id;        }else{          return 0;        }    }    public function getLedger($label)    {        $result = $this->db->select('ledger_id')->from('ledgers')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->like('ledger_title', $label, 'none')->get()->row();        return $result->ledger_id;    }    public function getSubGroupId($subgroup)    {        $subgroup_id = $this->db->select('account_subgroup_id')->from('account_subgroup')->where('branch_id', $this->session->userdata('SESS_BRANCH_ID'))->where('delete_status', 0)->like('subgroup_title', $subgroup, 'none')->get()->row()->account_subgroup_id;        return $subgroup_id;    }    public function get_ledger_details($listData)    {      $id=$listData['id'];      $start=isset($listData['start'])?$listData['start']:"";      $limit=isset($listData['limit'])?$listData['limit']:"";      $search=isset($listData['search'])?$listData['search']:"";        $branch_id         = $this->session->userdata('SESS_BRANCH_ID');        $financial_year_id = $this->session->userdata('SESS_FINANCIAL_YEAR_ID');        $sql = "SELECT * from (SELECT acad.advance_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,av.reference_id as reference_id,av.reference_type as reference_type, acad.dr_amount as dr_amount, acad.cr_amount,av.reference_number,av.voucher_type,av.voucher_number,av.voucher_date,acad.ledger_to,l1.ledger_title as particulars_title from accounts_advance_voucher acad    left join advance_voucher  av on av.advance_id=acad.advance_voucher_id    left join ledgers l on acad.ledger_from=l.ledger_id    left join ledgers l1 on l1.ledger_id=acad.ledger_to   WHERE l.ledger_id=$id and av.delete_status=0 AND av.branch_id=$branch_id AND av.financial_year_id=$financial_year_id and acad.delete_status=0 and av.converted_receipt_amount>0   UNIONSELECT acco.contra_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,co.reference_id as reference_id,co.reference_type as reference_type, acco.dr_amount as dr_amount, acco.cr_amount,co.reference_number,co.voucher_type,co.voucher_number,co.voucher_date,acco.ledger_to,l2.ledger_title as particulars_title from accounts_contra_voucher acco    left join contra_voucher  co on co.contra_voucher_id=acco.contra_voucher_id    left join ledgers l on acco.ledger_from=l.ledger_id    left join ledgers l2 on l2.ledger_id=acco.ledger_to   WHERE l.ledger_id=$id and co.delete_status=0 AND co.branch_id=$branch_id AND co.financial_year_id=$financial_year_id and acco.delete_status=0 and co.converted_receipt_amount>0  UNION SELECT acexp.expense_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,exp.reference_id as reference_id,exp.reference_type as reference_type, acexp.dr_amount as dr_amount, acexp.cr_amount,exp.reference_number,exp.voucher_type,exp.voucher_number,exp.voucher_date,acexp.ledger_to,l3.ledger_title as particulars_title from accounts_expense_voucher acexp    left join expense_voucher  exp on exp.expense_voucher_id=acexp.expense_voucher_id    left join ledgers l on acexp.ledger_from=l.ledger_id    left join ledgers l3 on l3.ledger_id=acexp.ledger_to   WHERE l.ledger_id=$id and exp.delete_status=0 AND exp.branch_id=$branch_id AND exp.financial_year_id=$financial_year_id and acexp.delete_status=0 and exp.converted_receipt_amount>0  UNIONSELECT acgen.general_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,gen.reference_id as reference_id,gen.reference_type as reference_type, acgen.dr_amount as dr_amount, acgen.cr_amount,gen.reference_number,gen.voucher_type,gen.voucher_number,gen.voucher_date,acgen.ledger_to,l4.ledger_title as particulars_title from accounts_general_voucher acgen    left join general_voucher  gen on gen.general_voucher_id=acgen.general_voucher_id    left join ledgers l on acgen.ledger_from=l.ledger_id    left join ledgers l4 on l4.ledger_id=acgen.ledger_to   WHERE l.ledger_id=$id and gen.delete_status=0 AND gen.branch_id=$branch_id AND gen.financial_year_id=$financial_year_id and acgen.delete_status=0 and gen.converted_receipt_amount>0  UNIONSELECT acpay.payment_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,pay.reference_id as reference_id,pay.reference_type as reference_type, acpay.dr_amount as dr_amount, acpay.cr_amount,pay.reference_number,pay.voucher_type,pay.voucher_number,pay.voucher_date,acpay.ledger_to,l5.ledger_title as particulars_title from accounts_payment_voucher acpay    left join payment_voucher  pay on pay.payment_id=acpay.payment_voucher_id    left join ledgers l on acpay.ledger_from=l.ledger_id    left join ledgers l5 on l5.ledger_id=acpay.ledger_to   WHERE l.ledger_id=$id and pay.delete_status=0 AND pay.branch_id=$branch_id AND pay.financial_year_id=$financial_year_id and acpay.delete_status=0 and pay.converted_receipt_amount>0   UNION SELECT acpurch.purchase_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,purch.reference_id as reference_id,purch.reference_type as reference_type, acpurch.dr_amount as dr_amount, acpurch.cr_amount,purch.reference_number,purch.voucher_type,purch.voucher_number,purch.voucher_date,acpurch.ledger_to,l6.ledger_title as particulars_title from accounts_purchase_voucher acpurch    left join purchase_voucher  purch on purch.purchase_voucher_id=acpurch.purchase_voucher_id    left join ledgers l on acpurch.ledger_from=l.ledger_id    left join ledgers l6 on l6.ledger_id=acpurch.ledger_to   WHERE l.ledger_id=$id and purch.delete_status=0 AND purch.branch_id=$branch_id AND purch.financial_year_id=$financial_year_id and acpurch.delete_status=0 and purch.converted_receipt_amount>0   UNION  SELECT acref.refund_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,ref.reference_id as reference_id,ref.reference_type as reference_type, acref.dr_amount as dr_amount, acref.cr_amount,ref.reference_number,ref.voucher_type,ref.voucher_number,ref.voucher_date,acref.ledger_to,l7.ledger_title as particulars_title from accounts_refund_voucher acref    left join refund_voucher ref on ref.refund_id=acref.refund_voucher_id    left join ledgers l on acref.ledger_from=l.ledger_id    left join ledgers l7 on l7.ledger_id=acref.ledger_to   WHERE l.ledger_id=$id and ref.delete_status=0 AND ref.branch_id=$branch_id AND ref.financial_year_id=$financial_year_id and acref.delete_status=0 and ref.converted_receipt_amount>0  UNIONSELECT acsal.sales_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,sal.reference_id as reference_id,sal.reference_type as reference_type, acsal.dr_amount as dr_amount, acsal.cr_amount,sal.reference_number,sal.voucher_type,sal.voucher_number,sal.voucher_date,acsal.ledger_to,l8.ledger_title as particulars_title from accounts_sales_voucher acsal    left join sales_voucher sal on sal.sales_voucher_id=acsal.sales_voucher_id    left join ledgers l on acsal.ledger_from=l.ledger_id    left join ledgers l8 on l8.ledger_id=acsal.ledger_to   WHERE l.ledger_id=$id and sal.delete_status=0 AND sal.branch_id=$branch_id AND sal.financial_year_id=$financial_year_id and acsal.delete_status=0 and sal.converted_receipt_amount>0  UNION SELECT acre.receipt_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,r.reference_id as reference_id,r.reference_type as reference_type, acre.dr_amount as dr_amount, acre.cr_amount,r.reference_number,r.voucher_type,r.voucher_number,r.voucher_date,acre.ledger_to,l9.ledger_title as particulars_title from accounts_receipt_voucher acre    left join receipt_voucher r on r.receipt_id=acre.receipt_voucher_id    left join ledgers l on acre.ledger_from=l.ledger_id    left join ledgers l9 on l9.ledger_id=acre.ledger_to   WHERE l.ledger_id=$id and r.delete_status=0 AND r.branch_id=$branch_id AND r.financial_year_id=$financial_year_id and acre.delete_status=0 and r.converted_receipt_amount>0 ) t";   if($search !="all" && $search !="")   {    $sql=$sql." where (t.voucher_date LIKE '%$search%'  or  t.voucher_number LIKE '%$search%' or  t.reference_number LIKE '%$search%' or  t.voucher_type LIKE '%$search%' or  t.particulars_title LIKE '%$search%' or  t.dr_amount LIKE '%$search%' or  t.cr_amount LIKE '%$search%') order by t.voucher_date desc";   }   else   {    $sql=$sql."  order by t.voucher_date desc";   }      if($start !="" && $limit !="")   {    $sql=$sql." LIMIT $start,$limit";   }        if ($query = $this->db->query($sql))        {            return $query->result();        }        else        {            return FALSE;        }    }    public function search_details($id, $search)    {        $branch_id         = $this->session->userdata('SESS_BRANCH_ID');        $financial_year_id = $this->session->userdata('SESS_FINANCIAL_YEAR_ID');        $sql = "SELECT * from (SELECT acad.advance_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,av.reference_id as reference_id, acad.dr_amount as dr_amount, acad.cr_amount,av.reference_number,av.voucher_type,av.voucher_number,av.voucher_date,acad.ledger_to,l1.ledger_title as particulars_title from accounts_advance_voucher acad    left join advance_voucher  av on av.advance_id=acad.advance_voucher_id    left join ledgers l on acad.ledger_from=l.ledger_id    left join ledgers l1 on l1.ledger_id=acad.ledger_to   WHERE l.ledger_id=$id and av.delete_status=0 AND av.branch_id=$branch_id AND av.financial_year_id=$financial_year_id and acad.delete_status=0   UNIONSELECT acco.contra_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,co.reference_id as reference_id, acco.dr_amount as dr_amount, acco.cr_amount,co.reference_number,co.voucher_type,co.voucher_number,co.voucher_date,acco.ledger_to,l2.ledger_title as particulars_title from accounts_contra_voucher acco    left join contra_voucher  co on co.contra_voucher_id=acco.contra_voucher_id    left join ledgers l on acco.ledger_from=l.ledger_id    left join ledgers l2 on l2.ledger_id=acco.ledger_to   WHERE l.ledger_id=$id and co.delete_status=0 AND co.branch_id=$branch_id AND co.financial_year_id=$financial_year_id and acco.delete_status=0  UNION SELECT acexp.expense_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,exp.reference_id as reference_id, acexp.dr_amount as dr_amount, acexp.cr_amount,exp.reference_number,exp.voucher_type,exp.voucher_number,exp.voucher_date,acexp.ledger_to,l3.ledger_title as particulars_title from accounts_expense_voucher acexp    left join expense_voucher  exp on exp.expense_voucher_id=acexp.expense_voucher_id    left join ledgers l on acexp.ledger_from=l.ledger_id    left join ledgers l3 on l3.ledger_id=acexp.ledger_to   WHERE l.ledger_id=$id and exp.delete_status=0 AND exp.branch_id=$branch_id AND exp.financial_year_id=$financial_year_id and acexp.delete_status=0  UNIONSELECT acgen.general_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,gen.reference_id as reference_id, acgen.dr_amount as dr_amount, acgen.cr_amount,gen.reference_number,gen.voucher_type,gen.voucher_number,gen.voucher_date,acgen.ledger_to,l4.ledger_title as particulars_title from accounts_general_voucher acgen    left join general_voucher  gen on gen.general_voucher_id=acgen.general_voucher_id    left join ledgers l on acgen.ledger_from=l.ledger_id    left join ledgers l4 on l4.ledger_id=acgen.ledger_to   WHERE l.ledger_id=$id and gen.delete_status=0 AND gen.branch_id=$branch_id AND gen.financial_year_id=$financial_year_id and acgen.delete_status=0  UNIONSELECT acpay.payment_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,pay.reference_id as reference_id, acpay.dr_amount as dr_amount, acpay.cr_amount,pay.reference_number,pay.voucher_type,pay.voucher_number,pay.voucher_date,acpay.ledger_to,l5.ledger_title as particulars_title from accounts_payment_voucher acpay    left join payment_voucher  pay on pay.payment_id=acpay.payment_voucher_id    left join ledgers l on acpay.ledger_from=l.ledger_id    left join ledgers l5 on l5.ledger_id=acpay.ledger_to   WHERE l.ledger_id=$id and pay.delete_status=0 AND pay.branch_id=$branch_id AND pay.financial_year_id=$financial_year_id and acpay.delete_status=0   UNION SELECT acpurch.purchase_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,purch.reference_id as reference_id, acpurch.dr_amount as dr_amount, acpurch.cr_amount,purch.reference_number,purch.voucher_type,purch.voucher_number,purch.voucher_date,acpurch.ledger_to,l6.ledger_title as particulars_title from accounts_purchase_voucher acpurch    left join purchase_voucher  purch on purch.purchase_voucher_id=acpurch.purchase_voucher_id    left join ledgers l on acpurch.ledger_from=l.ledger_id    left join ledgers l6 on l6.ledger_id=acpurch.ledger_to   WHERE l.ledger_id=$id and purch.delete_status=0 AND purch.branch_id=$branch_id AND purch.financial_year_id=$financial_year_id and acpurch.delete_status=0   UNION  SELECT acref.refund_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,ref.reference_id as reference_id, acref.dr_amount as dr_amount, acref.cr_amount,ref.reference_number,ref.voucher_type,ref.voucher_number,ref.voucher_date,acref.ledger_to,l7.ledger_title as particulars_title from accounts_refund_voucher acref    left join refund_voucher ref on ref.refund_id=acref.refund_voucher_id    left join ledgers l on acref.ledger_from=l.ledger_id    left join ledgers l7 on l7.ledger_id=acref.ledger_to   WHERE l.ledger_id=$id and ref.delete_status=0 AND ref.branch_id=$branch_id AND ref.financial_year_id=$financial_year_id and acref.delete_status=0  UNIONSELECT acsal.sales_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,sal.reference_id as reference_id, acsal.dr_amount as dr_amount, acsal.cr_amount,sal.reference_number,sal.voucher_type,sal.voucher_number,sal.voucher_date,acsal.ledger_to,l8.ledger_title as particulars_title from accounts_sales_voucher acsal    left join sales_voucher sal on sal.sales_voucher_id=acsal.sales_voucher_id    left join ledgers l on acsal.ledger_from=l.ledger_id    left join ledgers l8 on l8.ledger_id=acsal.ledger_to   WHERE l.ledger_id=$id and sal.delete_status=0 AND sal.branch_id=$branch_id AND sal.financial_year_id=$financial_year_id and acsal.delete_status=0  UNION SELECT acre.receipt_voucher_id as voucher_id,l.ledger_id,l.ledger_title, l.opening_balance,r.reference_id as reference_id, acre.dr_amount as dr_amount, acre.cr_amount,r.reference_number,r.voucher_type,r.voucher_number,r.voucher_date,acre.ledger_to,l9.ledger_title as particulars_title from accounts_receipt_voucher acre    left join receipt_voucher r on r.receipt_id=acre.receipt_voucher_id    left join ledgers l on acre.ledger_from=l.ledger_id    left join ledgers l9 on l9.ledger_id=acre.ledger_to   WHERE l.ledger_id=$id and r.delete_status=0 AND r.branch_id=$branch_id AND r.financial_year_id=$financial_year_id and acre.delete_status=0) t where (t.voucher_date LIKE '%$search%'  or  t.voucher_number LIKE '%$search%' or  t.reference_number LIKE '%$search%' or  t.voucher_type LIKE '%$search%' or  t.particulars_title LIKE '%$search%' or  t.dr_amount LIKE '%$search%' or  t.cr_amount LIKE '%$search%')";        if ($query = $this->db->query($sql))        {            return $query->result();        }        else        {            return FALSE;        }    }    public function get_ledger_list($start, $limit)    {        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $sql   = "SELECT t.ledger_id,t.ledger_title,t.opening_balance,SUM(t.dr_amount) as dr_amount,SUM(t.cr_amount) as cr_amount FROM ( SELECT l.ledger_id,l.ledger_title, l.opening_balance, b.dr_amount as dr_amount, b.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_payment_voucher where  delete_status=0 group by ledger_from) b on l.ledger_id = b.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ad.dr_amount as dr_amount, ad.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_advance_voucher where delete_status=0 group by ledger_from) ad on ad.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ac.dr_amount as dr_amount, ac.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_contra_voucher where delete_status=0 group by ledger_from) ac on ac.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ae.dr_amount as dr_amount, ae.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_expense_voucher where delete_status=0 group by ledger_from) ae on ae.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ag.dr_amount as dr_amount, ag.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_general_voucher where delete_status=0 group by ledger_from) ag on ag.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ap.dr_amount as dr_amount, ap.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_purchase_voucher where delete_status=0 group by ledger_from) ap on ap.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ar.dr_amount as dr_amount, ar.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_refund_voucher where delete_status=0 group by ledger_from) ar on ar.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id               UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, asal.dr_amount as dr_amount, asal.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_sales_voucher where delete_status=0 group by ledger_from) asal on asal.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id       UNION      SELECT l.ledger_id,l.ledger_title, l.opening_balance, c.dr_amount as dr_amount, c.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_receipt_voucher where delete_status=0 group by ledger_from) c on c.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id) as t GROUP by ledger_id LIMIT $start,$limit  ";        if ($query = $this->db->query($sql))        {            /* $this->db->where('discount_id',$data);              if($query = $this->db->get('discount')){ */            return $query->result();        }        else        {            return FALSE;        }    }    public function get_ledger_list_count()    {        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $sql   = "SELECT t.ledger_id,t.ledger_title,t.opening_balance,SUM(t.dr_amount) as dr_amount,SUM(t.cr_amount) as cr_amount FROM ( SELECT l.ledger_id,l.ledger_title, l.opening_balance, b.dr_amount as dr_amount, b.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_payment_voucher where  delete_status=0 group by ledger_from) b on l.ledger_id = b.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ad.dr_amount as dr_amount, ad.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_advance_voucher where delete_status=0 group by ledger_from) ad on ad.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ac.dr_amount as dr_amount, ac.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_contra_voucher where delete_status=0 group by ledger_from) ac on ac.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ae.dr_amount as dr_amount, ae.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_expense_voucher where delete_status=0 group by ledger_from) ae on ae.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ag.dr_amount as dr_amount, ag.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_general_voucher where delete_status=0 group by ledger_from) ag on ag.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ap.dr_amount as dr_amount, ap.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_purchase_voucher where delete_status=0 group by ledger_from) ap on ap.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ar.dr_amount as dr_amount, ar.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_refund_voucher where delete_status=0 group by ledger_from) ar on ar.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id               UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, asal.dr_amount as dr_amount, asal.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_sales_voucher where delete_status=0 group by ledger_from) asal on asal.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id       UNION      SELECT l.ledger_id,l.ledger_title, l.opening_balance, c.dr_amount as dr_amount, c.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_receipt_voucher where delete_status=0 group by ledger_from) c on c.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id) as t GROUP by ledger_id";        if ($query = $this->db->query($sql))        {            /* $this->db->where('discount_id',$data);              if($query = $this->db->get('discount')){ */            return $query->result();        }        else        {            return FALSE;        }    }    public function get_tot_ledger_amt()    {        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $sql   = "SELECT SUM(f.dr_amount) as tot_dr, SUM(f.cr_amount) as tot_cr,SUM(f.opening_balance) as tot_open from(SELECT t.ledger_id,t.ledger_title,t.opening_balance,SUM(t.dr_amount) as dr_amount,SUM(t.cr_amount) as cr_amount FROM ( SELECT l.ledger_id,l.ledger_title, l.opening_balance, b.dr_amount as dr_amount, b.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_payment_voucher where  delete_status=0 group by ledger_from) b on l.ledger_id = b.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ad.dr_amount as dr_amount, ad.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_advance_voucher where delete_status=0 group by ledger_from) ad on ad.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ac.dr_amount as dr_amount, ac.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_contra_voucher where delete_status=0 group by ledger_from) ac on ac.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ae.dr_amount as dr_amount, ae.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_expense_voucher where delete_status=0 group by ledger_from) ae on ae.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ag.dr_amount as dr_amount, ag.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_general_voucher where delete_status=0 group by ledger_from) ag on ag.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id          UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ap.dr_amount as dr_amount, ap.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_purchase_voucher where delete_status=0 group by ledger_from) ap on ap.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id        UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, ar.dr_amount as dr_amount, ar.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_refund_voucher where delete_status=0 group by ledger_from) ar on ar.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id               UNION       SELECT l.ledger_id,l.ledger_title, l.opening_balance, asal.dr_amount as dr_amount, asal.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_sales_voucher where delete_status=0 group by ledger_from) asal on asal.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id       UNION      SELECT l.ledger_id,l.ledger_title, l.opening_balance, c.dr_amount as dr_amount, c.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_receipt_voucher where delete_status=0 group by ledger_from) c on c.ledger_from = l.ledger_id where l.delete_status=0 AND l.branch_id=$branch_id) as t GROUP by ledger_id) as f";        if ($query = $this->db->query($sql))        {            /* $this->db->where('discount_id',$data);              if($query = $this->db->get('discount')){ */            return $query->result();        }        else        {            return FALSE;        }    }    public function get_ledger_list_serach($search, $start, $limit)    {        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $sql = "SELECT t.ledger_id,t.ledger_title,t.opening_balance,SUM(t.dr_amount) as dr_amount,SUM(t.cr_amount) as cr_amount FROM (SELECT l.ledger_id,l.ledger_title, l.opening_balance, b.dr_amount as dr_amount, b.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_payment_voucher where  delete_status=0 group by ledger_from) b on l.ledger_id = b.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id           UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, ac.dr_amount as dr_amount, ac.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_contra_voucher where  delete_status=0 group by ledger_from) ac on l.ledger_id = ac.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, aexp.dr_amount as dr_amount, aexp.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_expense_voucher where  delete_status=0 group by ledger_from) aexp on l.ledger_id = aexp.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, age.dr_amount as dr_amount, age.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_general_voucher where  delete_status=0 group by ledger_from) age on l.ledger_id = age.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, apurc.dr_amount as dr_amount, apurc.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_purchase_voucher where  delete_status=0 group by ledger_from) apurc on l.ledger_id = apurc.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, arec.dr_amount as dr_amount, arec.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_receipt_voucher where  delete_status=0 group by ledger_from) arec on l.ledger_id = arec.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, aref.dr_amount as dr_amount, aref.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_refund_voucher where  delete_status=0 group by ledger_from) aref on l.ledger_id = aref.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, asal.dr_amount as dr_amount, asal.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_sales_voucher where  delete_status=0 group by ledger_from) asal on l.ledger_id = asal.ledger_from where l.delete_status=0 AND l.branch_id=$branch_idUNIONSELECT l.ledger_id,l.ledger_title, l.opening_balance, a.dr_amount as dr_amount, a.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_advance_voucher where  delete_status=0 group by ledger_from) a on l.ledger_id = a.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id) as t  group by ledger_id having (t.ledger_title LIKE '%$search%'  or  t.opening_balance LIKE '%$search%' or  dr_amount LIKE '%$search%' or  cr_amount LIKE '%$search%') LIMIT $start,$limit";        if ($query = $this->db->query($sql))        {            /* $this->db->where('discount_id',$data);              if($query = $this->db->get('discount')){ */            return $query->result();        }        else        {            return FALSE;        }    }    public function get_ledger_list_serach_count($search)    {        $branch_id = $this->session->userdata('SESS_BRANCH_ID');        $sql = "SELECT t.ledger_id,t.ledger_title,t.opening_balance,SUM(t.dr_amount) as dr_amount,SUM(t.cr_amount) as cr_amount FROM (SELECT l.ledger_id,l.ledger_title, l.opening_balance, b.dr_amount as dr_amount, b.cr_amount as cr_amount from ledgers l inner join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_payment_voucher where  delete_status=0 group by ledger_from) b on l.ledger_id = b.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id           UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, ac.dr_amount as dr_amount, ac.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_contra_voucher where  delete_status=0 group by ledger_from) ac on l.ledger_id = ac.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, aexp.dr_amount as dr_amount, aexp.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_expense_voucher where  delete_status=0 group by ledger_from) aexp on l.ledger_id = aexp.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, age.dr_amount as dr_amount, age.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_general_voucher where  delete_status=0 group by ledger_from) age on l.ledger_id = age.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, apurc.dr_amount as dr_amount, apurc.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_purchase_voucher where  delete_status=0 group by ledger_from) apurc on l.ledger_id = apurc.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, arec.dr_amount as dr_amount, arec.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_receipt_voucher where  delete_status=0 group by ledger_from) arec on l.ledger_id = arec.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, aref.dr_amount as dr_amount, aref.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_refund_voucher where  delete_status=0 group by ledger_from) aref on l.ledger_id = aref.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id UNION  SELECT l.ledger_id,l.ledger_title, l.opening_balance, asal.dr_amount as dr_amount, asal.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_sales_voucher where  delete_status=0 group by ledger_from) asal on l.ledger_id = asal.ledger_from where l.delete_status=0 AND l.branch_id=$branch_idUNIONSELECT l.ledger_id,l.ledger_title, l.opening_balance, a.dr_amount as dr_amount, a.cr_amount as cr_amount from ledgers l left join (select ledger_from, sum(dr_amount) as dr_amount,sum(cr_amount) as cr_amount from accounts_advance_voucher where  delete_status=0 group by ledger_from) a on l.ledger_id = a.ledger_from where l.delete_status=0 AND l.branch_id=$branch_id) as t  group by ledger_id having (t.ledger_title LIKE '%$search%'  or  t.opening_balance LIKE '%$search%' or  dr_amount LIKE '%$search%' or  cr_amount LIKE '%$search%')";        if ($query = $this->db->query($sql))        {            /* $this->db->where('discount_id',$data);              if($query = $this->db->get('discount')){ */            return $query->result();        }        else        {            return FALSE;        }    }    public function getUniqLedgersName($ledger_id){      $this->db->select('ledger_name');      $this->db->from('tbl_ledgers');      $this->db->where('ledger_id',$ledger_id);      $l = $this->db->get();      if($l->num_rows() > 0){        return $l->row()->ledger_name;       }      return null;    }}